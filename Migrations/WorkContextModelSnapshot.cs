// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkAPI.Contexts;

#nullable disable

namespace WorkAPI.Migrations
{
    [DbContext(typeof(WorkContext))]
    partial class WorkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WorkAPI.Models.Handlowiec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("handlowiec");
                });

            modelBuilder.Entity("WorkAPI.Models.Komunikator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("CzasNadania")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("CzasOdebrania")
                        .HasColumnType("time(6)");

                    b.Property<DateTime?>("DataNadania")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataOdebrania")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdK")
                        .HasColumnType("int");

                    b.Property<int?>("IdProjektu")
                        .HasColumnType("int");

                    b.Property<int?>("IdZrodla")
                        .HasColumnType("int");

                    b.Property<string>("Nadawca")
                        .HasColumnType("longtext");

                    b.Property<string>("NadawcaIp")
                        .HasColumnType("longtext");

                    b.Property<string>("NrKontr")
                        .HasColumnType("longtext");

                    b.Property<string>("Odbiorca")
                        .HasColumnType("longtext");

                    b.Property<short?>("Priorytet")
                        .HasColumnType("smallint");

                    b.Property<string>("Projekt")
                        .HasColumnType("longtext");

                    b.Property<string>("Rodzaj")
                        .HasColumnType("longtext");

                    b.Property<short?>("Rok")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("SysDataMod")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SysDataRej")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SysOperatorMod")
                        .HasColumnType("longtext");

                    b.Property<string>("SysOperatorRej")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Termin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tresc")
                        .HasColumnType("longtext");

                    b.Property<string>("Uwagi")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Waznosc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Zrodlo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("komunikator");
                });

            modelBuilder.Entity("WorkAPI.Models.Kontrahent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiastoWysylki")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Miejscowosc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NazwaKontrahenta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NazwaWysylki")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumerDomu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumerKontrahenta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumerLokalu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UlicaWysylki")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("kontrahent");
                });

            modelBuilder.Entity("WorkAPI.Models.Lista_parametrow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("rodzaj")
                        .HasColumnType("longtext");

                    b.Property<string>("wartosc")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("lista_parametrow");
                });

            modelBuilder.Entity("WorkAPI.Models.Magazyn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Jm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nazwa")
                        .HasColumnType("longtext");

                    b.Property<string>("NrRysunku")
                        .HasColumnType("longtext");

                    b.Property<string>("StanWMagazynie")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("magazyn");
                });

            modelBuilder.Entity("WorkAPI.Models.Magazynek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("cena_jedn")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("data_rej")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ilosc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("indeks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("jedn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nazwa1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nr_dostawcy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nr_magazynu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nr_odbiorcy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nr_zamowienia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nr_zlecenia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("operator_rej")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("poz_zamow")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("rodzaj_dokum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status_dokum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("uwagi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("waluta_kod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("wartosc")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("magazynek");
                });

            modelBuilder.Entity("WorkAPI.Models.Produkty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("indeks")
                        .HasColumnType("int");

                    b.Property<string>("parametr")
                        .HasColumnType("longtext");

                    b.Property<string>("wartosc")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("produkty");
                });

            modelBuilder.Entity("WorkAPI.Models.Zamowienie", b =>
                {
                    b.Property<string>("NumerZamowienia")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NumerZamowienia");

                    b.Property<DateTime>("DataZamowienia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Handlowiec")
                        .HasColumnType("longtext");

                    b.Property<int>("KontrahentId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumerZamowieniaKlienta")
                        .HasColumnType("longtext");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NumerZamowienia");

                    b.HasIndex("KontrahentId");

                    b.ToTable("zamowienie");
                });

            modelBuilder.Entity("WorkAPI.Models.Zamowienie_pozycja", b =>
                {
                    b.Property<int>("ZamowienieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ZamowienieId"));

                    b.Property<float?>("Cena")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DataDostawy")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Handlowiec")
                        .HasColumnType("longtext");

                    b.Property<int>("IlePotwierdzono")
                        .HasColumnType("int");

                    b.Property<int>("IleZamowiono")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Jm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NrRysunku")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumerZamowienia")
                        .HasColumnType("longtext")
                        .HasColumnName("NumerZamowienia");

                    b.Property<DateTime?>("PlanowanaDataDostawy")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZamowienieNumerZamowienia")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ZamowienieId");

                    b.HasIndex("ZamowienieNumerZamowienia");

                    b.ToTable("zamowienia_pozycja");
                });

            modelBuilder.Entity("WorkAPI.Models.Zamowienie", b =>
                {
                    b.HasOne("WorkAPI.Models.Kontrahent", "Kontrahent")
                        .WithMany()
                        .HasForeignKey("KontrahentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontrahent");
                });

            modelBuilder.Entity("WorkAPI.Models.Zamowienie_pozycja", b =>
                {
                    b.HasOne("WorkAPI.Models.Zamowienie", null)
                        .WithMany("PozycjeZamowienia")
                        .HasForeignKey("ZamowienieNumerZamowienia");
                });

            modelBuilder.Entity("WorkAPI.Models.Zamowienie", b =>
                {
                    b.Navigation("PozycjeZamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
